{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/gate.jsx","common/save-data.js","../node_modules/talkjs/src/index.esnext.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","areas/help/talkjs-utility.js","../node_modules/regenerator-runtime/runtime.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","props","useState","name","setName","confirmed","setConfirmed","useEffect","nameInStorage","loadData","isTrueHero","onNameChange","e","target","value","testName","toLowerCase","includes","onNameSubmit","saveName","className","type","onChange","onClick","children","data","saveData","defaultData","progress","localStorage","setItem","JSON","stringify","parse","getItem","window","Error","t","a","l","k","s","document","createElement","async","src","head","appendChild","Promise","Talk","v","ready","then","f","r","push","catch","c","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","getHelpee","User","id","email","photoUrl","welcomeMessage","getHelper","getInbox","me","other","talkSession","Session","appId","conversationId","oneOnOneId","conversation","getOrCreateConversation","setParticipant","createInbox","selected","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/0.5cb262ed.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\r\nimport { loadData, saveName } from '../common/save-data';\r\n\r\nexport default (props) => {\r\n\r\n  const [name, setName] = useState();\r\n  const [confirmed, setConfirmed] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const currentSaveData = loadData();\r\n    const nameInStorage = currentSaveData.name;\r\n    if (nameInStorage) {\r\n      if (isTrueHero(nameInStorage)) {\r\n        setName(nameInStorage);\r\n        setConfirmed(true);\r\n      }\r\n    }\r\n\r\n  }, [])\r\n\r\n\r\n  const onNameChange = (e) => {\r\n    setName(e.target.value);\r\n  }\r\n\r\n\r\n  const isTrueHero = (testName) => {\r\n    return testName && testName.toLowerCase().includes('daniella');\r\n  }\r\n\r\n  const onNameSubmit = (e) => {\r\n    if (isTrueHero(name)) {\r\n      saveName(name);\r\n      setConfirmed(true);\r\n    } else {\r\n      setConfirmed(false);\r\n    }\r\n  }\r\n\r\n  const renderPrompt = () => {\r\n    if (confirmed) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"center\">\r\n        <p>To begin, enter your name</p>\r\n        <input type='test' onChange={onNameChange}></input>\r\n        <br />\r\n        <br />\r\n        <button onClick={onNameSubmit} className=\"primary\">Enter</button>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"Gate\">\r\n      {renderPrompt()}\r\n      {confirmed === false && <div>You are not the true hero. Only the chosen adventurer may receive guidance.</div>}\r\n      {confirmed === true && props.children}\r\n    </div>\r\n  );\r\n\r\n};","export const saveProgress = (id) => {\r\n  const data = loadData();\r\n  data.currentClue = id;\r\n  data.completedClues = [...data.completedClues, id];\r\n  saveData(data);\r\n}\r\n\r\nexport const saveName = (name) => {\r\n  const data = loadData();\r\n  data.name = name;\r\n  saveData(data);\r\n}\r\n\r\nconst defaultData = {\r\n  name: null,\r\n  progress: []\r\n}\r\n\r\nexport const saveData = (data) => {\r\n  localStorage.setItem('clue-data', JSON.stringify(data));\r\n}\r\n\r\nexport const loadData = () => {\r\n  const data = JSON.parse(localStorage.getItem('clue-data') || '{}');\r\n  return data || { ...defaultData };\r\n}\r\n","if (typeof window === \"undefined\") {\n  // note: this code should never be called, unless somehow the customer manages to use a bundler\n  // that doesn't read the package.json \"browser\" field.\n  throw new Error(\"[TalkJS] The TalkJS JavaScript SDK only works in browsers (and not, for example, in Node.js)\");\n}\n\n// Snippet[starts]\n(function(t,a,l,k,j,s){\ns=a.createElement(\"script\");s.async=1;s.src=\"https://cdn.talkjs.com/talk.js\";a.head.appendChild(s);k=t.Promise;\nt.Talk={v:3,ready:{then:function(f){if(k)return new k(function(r,e){l.push([f,r,e]);});l.push([f]);},catch:function(){return k&&new k();},c:l}};\n})(window,document,[]);\n// Snippet[ends]\n\nvar Talk = window.Talk;\nexport default Talk;\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","\r\nimport Talk from \"talkjs\";\r\n\r\nexport const getHelpee = () => new Talk.User({\r\n  id: \"123456\",\r\n  name: \"Hero\",\r\n  email: \"hero@test.com\",\r\n  photoUrl: \"https://i.imgur.com/9M8gvLW.png\",\r\n  welcomeMessage: \"Help will come to those who ask for it.\"\r\n});\r\n\r\nexport const getHelper = () => new Talk.User({\r\n  id: \"654321\",\r\n  name: \"Old Woman\",\r\n  email: \"wisewoman@test.com\",\r\n  photoUrl: \"https://i.imgur.com/urprSoj.png\",\r\n  welcomeMessage: \"Welcome!\"\r\n});\r\n\r\nexport const getInbox = (me, other) => {\r\n  if (!window.talkSession) {\r\n    window.talkSession = new Talk.Session({\r\n      appId: 'tKuSoSds',\r\n      me: me\r\n    });\r\n  }\r\n\r\n  // You control the ID of a conversation. oneOnOneId is a helper method that generates\r\n  // a unique conversation ID for a given pair of users. \r\n  const conversationId = Talk.oneOnOneId(me, other);\r\n\r\n  const conversation = window.talkSession.getOrCreateConversation(conversationId);\r\n  conversation.setParticipant(me);\r\n  conversation.setParticipant(other);\r\n\r\n  return window.talkSession.createInbox({\r\n    selected: conversation\r\n  });\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}