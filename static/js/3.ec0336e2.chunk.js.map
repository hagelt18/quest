{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/data/clues.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/AnswerField.jsx","components/clue.jsx","components/clue-not-found.jsx","areas/clue-page.jsx"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","clues","id","type","question","webQuestion","webAnswer","answer","_toConsumableArray","arrayLikeToArray","iter","onChange","useState","fullText","setFullText","inputs","refs","inputValueChanged","newText","padEnd","chars","join","nextControl","focus","className","key","maxLength","ix","e","target","onChangeHandler","onKeyUp","keyCode","previousInput","onInputKeyDown","ref","clueData","setAnswer","confirmed","setConfirmed","onClick","correct","ClueNotFound","CluePage","props","clueId","match","params","find","c","renderClue"],"mappings":"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","file":"static/js/3.ec0336e2.chunk.js","sourcesContent":["import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const clues = [\r\n  {\r\n    id: '6101d6ed-c553-4693-a7b5-7c74bb0a1f39',\r\n    type: 'basic',\r\n    question: 'We have just one, but with eight to spare. We rumble when touched and we wail when empty. What are we?',\r\n    webQuestion: true,\r\n    webAnswer: false\r\n  },\r\n  {\r\n    id: 'eb8dd419-2569-4dde-b13b-1e31134184d4',\r\n    type: 'basic',\r\n    question: 'Travel to the nearest Temple of the Moose. There you will find a clue to the whereabouts of the first Power Crystal',\r\n    answer: '795012341234',\r\n    webQuestion: true,\r\n    webAnswer: true\r\n  }\r\n]\r\n\r\nexport default clues;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\r\nimport './AnswerField.css';\r\n// const chestGif = require('../assets/images/chest3d.gif');\r\n\r\nexport default ({ length, onChange }) => {\r\n\r\n    const [fullText, setFullText] = useState('                                 ');\r\n    const inputs = [];\r\n    const refs = [];\r\n\r\n\r\n\r\n    const inputValueChanged = (i, value) => {\r\n        let newText = fullText || '';\r\n        if (!newText.length < length) {\r\n            newText = newText.padEnd(length - 1);\r\n        }\r\n        const chars = [...newText];\r\n        chars[i] = value;\r\n        newText = chars.join('');\r\n        setFullText(newText)\r\n        onChange(newText);\r\n\r\n        if (value) {\r\n            var nextControl = refs[i + 1];\r\n            if (nextControl) {\r\n                nextControl.focus();\r\n            }\r\n        }\r\n        else {\r\n            // if ((i - 1) >= 0) {\r\n            //     var previousControl = refs[i - 1];\r\n            //     if (previousControl) {\r\n            //         previousControl.focus();\r\n            //     }\r\n            // }\r\n        }\r\n\r\n    }\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        const onChangeHandler = ix => e => {\r\n            inputValueChanged(ix, e.target.value)\r\n        };\r\n        const onInputKeyDown = ix => e => {\r\n            if (e.keyCode === 8) {\r\n                if (!refs[ix].value && (ix - 1) >= 0) {\r\n                    var previousInput = refs[ix - 1];\r\n                    previousInput.focus();\r\n                    previousInput.value = '';\r\n                    inputValueChanged(ix - 1, '');\r\n                }\r\n            }\r\n        }\r\n        const refSetter = (ref) => {\r\n            refs.push(ref);\r\n        }\r\n\r\n        inputs.push((\r\n            <span className=\"CharacterInputWrapper\">\r\n                <input className=\"CharacterInput\"\r\n                    key={i}\r\n                    type=\"text\"\r\n                    maxLength={1}\r\n                    onChange={onChangeHandler(i)}\r\n                    onKeyUp={onInputKeyDown(i)}\r\n                    ref={refSetter}\r\n                />\r\n            </span>\r\n\r\n        ));\r\n    }\r\n    return (\r\n        <div>\r\n            {inputs}\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n// import AnswerField from './AnswerField';\r\nimport AnswerField from './AnswerField';\r\n\r\nexport default ({ clueData }) => {\r\n\r\n  const [answer, setAnswer] = useState();\r\n  const [confirmed, setConfirmed] = useState(null);\r\n\r\n\r\n  const onAnswerChange = (value) => {\r\n    // setAnswer(e.target.value);\r\n    setAnswer(value);\r\n  }\r\n\r\n  const confirmAnswer = () => {\r\n    const correct = clueData.answer === answer\r\n    setConfirmed(correct);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      {clueData.webQuestion && <p>{clueData.question}</p>}\r\n      <br />\r\n      {clueData.webAnswer && (\r\n        <div>\r\n          {/* <input type=\"text\" onChange={onAnswerChange} /> */}\r\n          <AnswerField length={clueData.answer.length} onChange={onAnswerChange} />\r\n          <br />\r\n          {answer}\r\n          <button onClick={confirmAnswer}>Submit</button>\r\n        </div>\r\n      )}\r\n      {confirmed === false && <div>Try again.</div>}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport const ClueNotFound = () => {\r\n  return (\r\n    <div>\r\n      Clue doesn't exist\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClueNotFound;","import React from 'react';\nimport Clue from '../components/clue';\nimport ClueNotFound from '../components/clue-not-found';\nimport clues from '../assets/data/clues';\n\nexport const CluePage = (props) => {\n  const clueId = props.match.params.id\n  const clueData = clues.find(c => c.id === clueId)\n\n  const renderClue = (type) => {\n    switch (type) {\n      case 'basic':\n      default:\n        return <Clue clueData={clueData} />\n    }\n  }\n\n  if (!clueData) {\n    return <ClueNotFound />\n  }\n\n  return (\n    <div className=\"ClueWrapper Page\">\n      {renderClue(clueData.type)}\n    </div>\n  );\n}\n\nexport default CluePage;\n"],"sourceRoot":""}